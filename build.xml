<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->

<project name="java-ci-pipeline" basedir=".">
 
<!--   
    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="dist" location="dist" />
    <property name="version" value="1.0" />
    <property name="build.compiler" 
      value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
    
    <description>Builds, tests, and runs the project testANT.</description>
    <import file="nbproject/build-impl.xml"/>
 
    <target name="init">
        <tstamp />
        <mkdir dir="${build}" />
    </target>
 
    <target name="compile" depends="init" description="compile the source">
        <javac srcdir="${src}" destdir="${build}" />
    </target>
    
    <target name="Armar Jar" depends="compile" description="generate the distribution">
        <echo>Armando el JAR...</echo>
	<jar 	destfile = "dist/lib/java-ci-pipeline.jar"
		basedir = "build/classes/CalculadoraPck"/>
    </target>
-->
<target name="java-ci-pipeline" depends="jar">
 <property name="store.jar.name" value="java-ci-pipeline"/>
        <property name="store.dir" value="store"/>
        <property name="store.jar" value="${store.dir}/${store.jar.name}.jar"/>
        <echo message="Packaging ${application.title} into a single JAR at ${store.jar}"/>
        <delete dir="${store.dir}"/>
        <mkdir dir="${store.dir}"/>
        <mkdir dir="dist/lib"/>
        <jar destfile="${store.dir}/temp_final.jar" filesetmanifest="skip">
            <zipgroupfileset dir="dist" includes="*.jar"/>
            <zipgroupfileset dir="dist/lib" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
        <zip destfile="${store.jar}">
            <zipfileset src="${store.dir}/temp_final.jar"
                    excludes="META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA"/>
        </zip>
        <delete file="${store.dir}/temp_final.jar"/>

 </target>
</project>